import type { NextPage } from 'next'
import Head from 'next/head'
import dynamic from 'next/dynamic'
import { useEffect, useState } from 'react'

import LoadingSpinner from '../../src/components/loading-spinner'
declare global {
  interface FederatedModule {
    get: (path: string) => Promise<CallableFunction>
  }
  interface Window {
    aboutApp: FederatedModule
  }
}

interface AboutProps {
  hostTime?: string
  nameHandler: (name: string) => void
}

const RemoteAbout: React.ComponentType<AboutProps> = dynamic(() => {
  return window.aboutApp?.get("./about").then((factory) => factory())
}, {
  ssr: false,
  loading: function loadingSpinner() {
    return <LoadingSpinner />
  }
})

const AboutPage: NextPage = () => {
  const [currentTime, setCurrentTime] = useState('')
  const [remoteName, setRemoteName] = useState('')
  const nameDialogMessage: string = 'Name received from the remote "about" module: '

  useEffect(() => {
    let intervalID: number

    intervalID = window.setInterval(() => {
       setCurrentTime(new Date().toLocaleTimeString())
    }, 1000)

    return () => {
      if (intervalID) clearInterval(intervalID)
    }
  }, [])

  return (
    <>
      <Head>
        <title>Host MFE | About</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {remoteName &&
        <section>
          <p>Name received from the remote <strong>about</strong> module: {remoteName}</p>
        </section>
      }
      <RemoteAbout hostTime={currentTime} nameHandler={(remoteName) => alert(`${nameDialogMessage}${remoteName}`)} />
    </>
  )
}

export default AboutPage
